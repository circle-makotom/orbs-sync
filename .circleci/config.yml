version: 2.1

commands:
  smoke-test-common-steps:
    parameters:
      goos:
        type: string
      goarch:
        type: string
    steps:
      - attach_workspace:
          at: .
      - when:
          condition:
            or:
              - equal:
                  - << parameters.goos >>
                  - linux
              - equal:
                  - << parameters.goos >>
                  - android
          steps:
            - run:
                name: Extract tarball
                command: |
                  . BUILD_NAME
                  tar -xf orbs-sync-${BUILD_NAME}-<< parameters.goos >>-<< parameters.goarch >>.tar.gz
      - when:
          condition:
            equal:
              - << parameters.goos >>
              - windows
          steps:
            - run:
                name: Extract zip
                command: |
                  $ProgressPreference = "SilentlyContinue"

                  $BuildName = $(& bash -c '. BUILD_NAME; echo $BUILD_NAME')
                  Expand-Archive orbs-sync-${BuildName}-<< parameters.goos >>-<< parameters.goarch >>.zip .
      - unless:
          condition:
            or:
              - equal:
                  - << parameters.goos >>
                  - linux
              - equal:
                  - << parameters.goos >>
                  - android
              - equal:
                  - << parameters.goos >>
                  - windows
          steps:
            - run:
                name: Extract zip
                command: |
                  . BUILD_NAME
                  unzip orbs-sync-${BUILD_NAME}-<< parameters.goos >>-<< parameters.goarch >>.zip
      - run:
          name: Show version
          command: ./orbs-sync --version
      - run:
          name: Show help message
          command: ./orbs-sync --help
      - run:
          name: Run without command line arguments
          command: ./orbs-sync

jobs:
  determine-build-name:
    docker:
      - image: debian:buster-slim
    steps:
      - run:
          name: Determine build name
          command: |
            echo export BUILD_NAME=\"0.2.${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1:0:7}\" | tee -a BUILD_NAME
      - persist_to_workspace:
          root: .
          paths:
            - BUILD_NAME

  build:
    docker:
      - image: golang:1.17
    parameters:
      goos:
        type: string
      goarch:
        type: string
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apt update
            apt install -y zip
      - attach_workspace:
          at: dist
      - run:
          name: Build
          command: |
            . dist/BUILD_NAME
            GOOS_LIST_OVERRIDE='("<< parameters.goos >>")' GOARCH_LIST_OVERRIDE='("<< parameters.goarch >>")' ./build-and-pack-all.sh
      - persist_to_workspace:
          root: dist
          paths:
            - << parameters.goos >>/<< parameters.goarch >>
            - "*.tar.gz"
            - "*.zip"
      - store_artifacts:
          path: dist
          destination: /

  go-test:
    docker:
      - image: golang
    steps:
      - checkout
      - run: go vet .
      - run: go test .

  smoke-test-linux-amd64:
    docker:
      - image: archlinux
    steps:
      - smoke-test-common-steps:
          goos: linux
          goarch: amd64

  smoke-test-linux-arm64:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
    steps:
      - smoke-test-common-steps:
          goos: linux
          goarch: arm64

  smoke-test-windows-amd64:
    machine:
      image: windows-server-2019-vs2019:stable
    resource_class: windows.medium
    shell: powershell.exe
    steps:
      - smoke-test-common-steps:
          goos: windows
          goarch: amd64

  smoke-test-darwin-amd64:
    macos:
      xcode: 12.4.0
    steps:
      - smoke-test-common-steps:
          goos: darwin
          goarch: amd64

  release:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install dependencies
          command: |
            tmpPath=$(mktemp)
            curl -sSJL https://api.github.com/repos/cli/cli/releases/latest | grep -o 'https://github.com/cli/cli/releases/download/[^/]\{1,\}/gh_[^/]\{1,\}_linux_amd64.deb' | xargs curl -o $tmpPath -JL
            sudo dpkg -i $tmpPath
      - run:
          name: Create a release
          command: |
            . BUILD_NAME
            gh release create -R ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} -t "${BUILD_NAME}" -n "" "${BUILD_NAME}" --target ${CIRCLE_SHA1} *.tar.gz *.zip

workflows:
  build-test-release:
    jobs:
      - determine-build-name
      - build:
          name: build-<< matrix.goos >>-<< matrix.goarch >>
          matrix:
            parameters:
              goos:
                - linux
                - windows
                - darwin
              goarch:
                - amd64
                - arm64
          requires:
            - determine-build-name
      - go-test:
          requires:
            - determine-build-name
      - smoke-test-linux-amd64:
          requires:
            - build-linux-amd64
      - smoke-test-linux-arm64:
          requires:
            - build-linux-arm64
      - smoke-test-windows-amd64:
          requires:
            - build-windows-amd64
      - smoke-test-darwin-amd64:
          requires:
            - build-darwin-amd64
      - release:
          requires:
            - build
            - go-test
            - smoke-test-linux-amd64
            - smoke-test-linux-arm64
            - smoke-test-windows-amd64
            - smoke-test-darwin-amd64
          context:
            - github
          filters:
            branches:
              only: main
